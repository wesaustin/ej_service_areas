---
title: "drinking water indicators"
author: "Tina Bardot"
date: "2023-08-09"
output:
  html_document: default
  pdf_document: default
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = TRUE)
```

## R Markdown

```{r echo=TRUE}

#load packages 

if (!require("pacman")) install.packages("pacman")
pacman::p_load(
  readr,
  tidyverse,
  sf, # vector data operations
  raster, # raster data operations
  exactextractr, # fast raster data extraction for polygons
  maps, # to get county boundary data
  data.table, # data wrangling
  dplyr, # data wrangling
  lubridate, # Date object handling
  tmap, # for map creation
  modelsummary, # regression table generation
  future.apply, # parallel computation
  cdlTools, # download CDL data
  rgdal, # required for cdlTools
  prism, # download PRISM data
  stringr # string manipulation
)
library(future.apply)
library(parallel)


```



```{r echo =TRUE}
#load data
setwd("C:/Users/gaustin/OneDrive - Environmental Protection Agency (EPA)/NCEE - Water System Service Boundaries/ej_service_areas")

LCR_samp <- read_csv("C:/Users/gaustin/OneDrive - Environmental Protection Agency (EPA)/DWDB/Data/sdwis/SDWA_LCR_SAMPLES.csv")
SDWA_violations <- read_csv("C:/Users/gaustin/OneDrive - Environmental Protection Agency (EPA)/DWDB/Data/sdwis/SDWA_VIOLATIONS.csv")

View(LCR_samp)
View(SDWA_violations)

```
#Lead Action Level Exceedences

Using the SDWA_LCR_SAMPLES file, generate an variable for the total number of times a 90th percentile sample (sample_result) is above 0.015 mg/l for lead (i.e., pb90). Simplify this and save as a dataframe with one observation per PWSID and one variable for the number of exceedences. Optionally, you could create a variable for the highest 90th percentile that was observed per system or any other variable of interest. 

```{r echo = TRUE}
#find the samples exceeding 0.015 mg/l lead and group by PWSID
LCR_exc <- LCR_samp %>%
  filter(SAMPLE_MEASURE > 0.015) 

glimpse(LCR_exc)

```

```{r echo = TRUE}

#get counts for number of violations by PWSID 

PWSID_LCR_exc <- LCR_exc %>%
  group_by(PWSID) %>%
  mutate(total_violations = n())

glimpse(PWSID_LCR_exc)

```
```{r echo = TRUE}

#Now select the max sample measure for each PSWID
PWSID_LCR_2 <- PWSID_LCR_exc %>%
  ungroup(PWSID) %>%
  filter(SAMPLE_MEASURE == max(SAMPLE_MEASURE), .by = PWSID) 

#check that your data looks good, should have 1 of each violating PWSID and a column with total violations

View(PWSID_LCR_2)
```

```{r echo = TRUE}

#We now want to clean this data up, keeping only the total number of violations per PWSID and the maximum contamination in each

LCR_violations_per_PWSID <- PWSID_LCR_2 %>%
  select(PWSID, SAMPLE_MEASURE, UNIT_OF_MEASURE, total_violations, SAMPLING_END_DATE) %>%
  rename(Maximum_sample_exceedence = SAMPLE_MEASURE) %>%
  rename(Units = UNIT_OF_MEASURE)

#I also kept the date, to keep a sense of the distribution for when these violations occurred

View(LCR_violations_per_PWSID)

write.csv(LCR_violations_per_PWSID, "C:/Users/gaustin/OneDrive - Environmental Protection Agency (EPA)/NCEE - Water System Service Boundaries/ej_service_areas/data/indicators/LCR_violations_per_PWSID.csv")

```
